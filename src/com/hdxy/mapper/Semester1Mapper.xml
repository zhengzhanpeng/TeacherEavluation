<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hdxy.mapper.Semester1Mapper" >
    <!-- 用于查询Semester1中的对应学期所有表用到的模型 -->
	<resultMap type="Semester1" id="semester1List">
		<result  column="jobNumber" property="jobNumber" javaType="java.lang.String"/>  
	</resultMap>
	<resultMap type="ScoreInputShow" id="scoreInputShowList"/>
	<select id="checkSemester1" resultType="Integer">
		SELECT id FROM semester1 WHERE jobNumber = #{jobNumber, jdbcType=VARCHAR} AND year = #{year, jdbcType=INTEGER};
	</select>
	<insert id="addSemester1" parameterType="Semester1">
		INSERT INTO semester1 (id, jobNumber, name, position, collegeId, superviseScore, peerScore, date, year) 
		SELECT null, #{jobNumber}, name, position, #{collegeId}, #{superviseScore}, #{peerScore}, #{date}, #{year} 
		FROM teacher_data WHERE jobNumber = #{jobNumber};
	</insert>
	<update id="updateSemester1" parameterType="Semester1">
		UPDATE semester1 SET superviseScore = #{superviseScore}, peerScore = #{peerScore}, date = #{date} 
		WHERE jobNumber = #{jobNumber} AND year = (SELECT value FROM some_message WHERE name = 'year');
	</update>
	<delete id="deleteSemester1">
		DELETE FROM semester1 WHERE jobNumber = #{jobNumber, jdbcType=VARCHAR} AND year = #{year, jdbcType=INTEGER};
	</delete>
	<select id="getSemester1s" resultMap="semester1List">
		SELECT jobNumber, name, position, superviseScore, peerScore, studentScore, endScore FROM semester1 WHERE collegeId = #{collegeId, jdbcType=INTEGER} AND year = (SELECT value FROM some_message WHERE name = 'year');
	</select>
	<update id="setStudentScore" parameterType="ScoreInput">
		UPDATE semester1 SET studentScore = #{studentScore} WHERE jobNumber = #{jobNumber} AND year = #{year};
	</update>
	<insert id="addStudentScore" parameterType="ScoreInput">
		INSERT INTO semester1 (id, jobNumber, name, position, superviseScore, peerScore, studentScore, year)
		SELECT null, #{jobNumber}, name, position, 0, 0, #{studentScore} , #{year}
		FROM teacher_data WHERE jobNumber = #{jobNumber};
	</insert>
	<select id="getScoreInputShow" resultMap="scoreInputShowList">
		SELECT s.name, s.position, s.jobNumber, s.studentScore, c.collegeName, c.phone 
		FROM semester1 AS s INNER JOIN college AS c ON s.collegeId = c.id
		WHERE s.year = (SELECT value FROM some_message WHERE name = 'year');
	</select>
	<update id="computeEndScore">
		UPDATE semester1 SET endScore = superviseScore * #{superviseScore, jdbcType=DOUBLE} + 
		peerScore * #{peerScore, jdbcType=DOUBLE} + studentScore * #{studentScore, jdbcType=DOUBLE}
		WHERE year = #{year, jdbcType=INTEGER};
	</update>
	<select id="getAvgEndScore" parameterType="Integer" resultType="Integer">
		SELECT AVG(endScore) FROM semester1 WHERE (superviseScore != 0 OR peerScore != 0) 
		AND year = #{year, jdbcType=INTEGER};
	</select>
	<insert id="addSemester1Set" parameterType="Semester1">
		INSERT INTO semester1 values(null 
		<if test="jobNumber != null">
			, #{jobNumber}
		</if>
		<if test="name != null">
			, #{name}
		</if>
		<if test="position != null">
			, #{position}
		</if>
		<if test="collegeId != null">
			, #{collegeId}
		</if>
		<if test="superviseScore != null">
			, #{superviseScore}
		</if>
		<if test="peerScore != null">
			, #{peerScore}
		</if>
		<if test="studentScore != null">
			, #{studentScore}
		</if>
		<if test="endScore != null">
			, #{endScore}
		</if>
		<if test="date != null">
			, #{date}
		</if>
		<if test="year != null">
			, #{year}
		</if>
		);
	</insert>
</mapper>